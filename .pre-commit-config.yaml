repos:
  # a set of useful Python-based pre-commit hooks
- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.4.0
  hooks:
  # list of definitions and supported hooks: https://pre-commit.com/hooks.html
  - id: trailing-whitespace # removes any whitespace at the ends of lines
  - id: check-toml     # check toml syntax by loading all toml files
    exclude: ^samples/
  - id: check-yaml     # check yaml syntax by loading all yaml files
    exclude: ^samples/
  - id: check-json     # check-json syntax by loading all json files
    exclude: ^samples/
  - id: check-merge-conflict     # check for files with merge conflict strings
    exclude: ^samples/
    args: [--assume-in-merge]       #  and run this check even when not explicitly in a merge
  - id: check-added-large-files     # check that no "large" files have been added
    exclude: ^samples/
    args: [--maxkb=10240]       #  where large means 10MB+, as in Hugging Face's git server
  - id: debug-statements     # check for python debug statements (import pdb, breakpoint, etc.)
    exclude: ^samples/
  - id: detect-private-key     # checks for private keys (BEGIN X PRIVATE KEY, etc.)
    exclude: ^samples/
  - id: mixed-line-ending
    exclude: ^samples/
    args: [--fix=lf]       # convert mixed line endings to unix style
  - id: end-of-file-fixer # makes sure files end in a newline and only a newline
    exclude: ^samples/
  - id: check-case-conflict     # check for files with names that would conflict on a case-insensitive filesystem
    exclude: ^samples/
  - id: check-symlinks     # check for symlinks
    exclude: ^samples/
  - id: check-ast     # check for syntax errors in python files
    exclude: ^samples/
  - id: check-xml     # check for syntax errors in xml files
    exclude: ^samples/
  - id: check-executables-have-shebangs     # check that executables have shebangs
    exclude: ^samples/
    types: [shell, bash, sh, zsh]
  - id: sort-simple-yaml     # sort yaml files
    exclude: ^samples/
  - id: requirements-txt-fixer     # sort requirements.txt files
    exclude: ^samples/
  - id: pretty-format-json # pretty format json files
    exclude: ^samples/
  - id: double-quote-string-fixer     # convert single quotes to double quotes deal with strings in python files
    exclude: ^samples/

- repo: https://github.com/PyCQA/autoflake
  rev: v2.0.0
  hooks:
  - id: autoflake
    exclude: ^samples/
    args: [--in-place, --expand-star-imports, --ignore-init-module-imports, --remove-all-unused-imports,
      --remove-unused-variables]
- repo: https://github.com/pycqa/isort
  rev: 6.0.1
  hooks:
  - id: isort
    args: [--profile, black, --line-length, "150"]
    exclude: ^samples/

  # black python autoformatting
- repo: https://github.com/psf/black
  rev: 22.12.0
  hooks:
  - id: black
    exclude: ^samples/
    args: [--line-length, '150', --target-version, py37, --skip-string-normalization]
    # additional configuration of black in pyproject.toml

  # shellcheck-py for linting shell files
- repo: https://github.com/shellcheck-py/shellcheck-py
  rev: v0.9.0.2
  hooks:
  - id: shellcheck
    exclude: ^samples/
- repo: local
  hooks:
  - id: jupyter-nb-clear-output
    exclude: ^samples/
    name: jupyter-nb-clear-output
    files: \.ipynb$
    stages: [pre-commit]
    language: system
    entry: jupyter nbconvert --ClearOutputPreprocessor.enabled=True --inplace
# - repo: local
#   hooks:
#     - id: pytest-check
#       exclude: ^samples/
#       name: pytest-check
#       entry: python -m pytest
#       language: python
#       pass_filenames: false
#       always_run: true
#       args: ["-v"]  # Add verbose output
#       additional_dependencies: [pytest, python-dotenv]
